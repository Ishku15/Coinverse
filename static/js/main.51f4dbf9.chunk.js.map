{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/Cryptodetails.jsx","components/Exchanges.jsx","components/Homepage.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","onClick","MenuOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getCryptoExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetCryptoExchangesQuery","Loader","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","millify","price","marketCap","change","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","Cryptodetails","useParams","setTimeperiod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","coinExchanges","exchanges","console","log","span","accordion","header","marketShare","showArrow","Homepage","globalStats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","useGetCryptoNewsQuery","demoImage","News","cryptoNews","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.51f4dbf9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react'\r\nimport { Button, Menu, Typography, Avatar } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons'\r\nimport icon from \"../images/cryptocurrency.png\"\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true)\r\n    const [screenSize, setScreenSize] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth)\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        handleResize()\r\n\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    }, [])\r\n    useEffect(() => {\r\n        if (screenSize < 768) {\r\n            setActiveMenu(false)\r\n        }\r\n        else {\r\n            setActiveMenu(true)\r\n        }\r\n    }, [screenSize])\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/homepage\">Crytoverse</Link>\r\n                </Typography.Title>\r\n                {activeMenu && (<Menu theme=\"dark\">\r\n                    <Menu.Item icon={<HomeOutlined />}>\r\n                        <Link to=\"/homepage\">Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined />}>\r\n                        <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined />}>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Menu.Item>\r\n                </Menu>)}\r\n\r\n                <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined />\r\n                </Button>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '0e161ce069msh7e0ebb6daeb6e43p1d7b53jsn67595cc20534'\r\n}\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com'\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`)\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`)\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timeperiod }) => createRequest(`/coin/${coinId}/history/${timeperiod}`)\r\n        }),\r\n        getCryptoExchanges: builder.query({\r\n            query: () => createRequest(`/exchanges`)\r\n        }),\r\n    })\r\n})\r\n\r\n\r\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery , useGetCryptoExchangesQuery} = cryptoApi;","import React from 'react';\r\nimport {Spin} from 'antd'\r\nconst Loader = () => {\r\n    return(\r\n        <div className=\"loader\">\r\n            <Spin />\r\n        </div>\r\n    )\r\n}\r\nexport default Loader","import React, { useState, useEffect } from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Row, Col, Input } from 'antd'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport { createConfigItem } from '@babel/core'\r\nimport Loader from './Loader'\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 10 : 100\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    useEffect(() => {\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        setCryptos(filteredData)\r\n    }, [cryptosList, searchTerm])\r\n\r\n    if (isFetching) { return <Loader /> }\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n                <div className=\"search-crypto\">\r\n                    <Input placeholder=\"Search Crpyto\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n\r\n                </div>\r\n            )}\r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card\r\n                                title={`${currency.rank}. ${currency.name} `}\r\n                                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\r\n                                hoverable\r\n                            >\r\n                                <p>Price: ${millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { Col, Row, Typography } from 'antd'\r\n\r\nconst { Title } = Typography\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\r\n        coinPrice.push(coinHistory.data?.history[i].price)\r\n        coinTimestamp.push(new Date(coinHistory.data?.history[i].timestamp))\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price in USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd'\r\n            }\r\n        ]\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">{coinName} Price Chart</Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">{coinHistory?.data?.change}%</Title>\r\n                    <Title level={5} className=\"current-price\">Current {coinName} price : ${currentPrice}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React, { useState } from 'react'\r\nimport HTMLReactParser from 'html-react-parser'\r\nimport { useParams } from 'react-router'\r\nimport millify from 'millify'\r\nimport { Col, Row, Typography, Select } from 'antd'\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi'\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\nimport LineChart from './LineChart'\r\nimport Loader from './Loader'\r\nconst { Title, Text } = Typography\r\nconst { Option } = Select\r\n\r\nconst Cryptodetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timeperiod, setTimeperiod] = useState('7d');\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n\r\n    const cryptoDetails = data?.data?.coin;\r\n    if (isFetching) return <Loader />;\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">{cryptoDetails.name}({cryptoDetails.slug}) Price</Title>\r\n                <p>\r\n                    {cryptoDetails.name} live price in US Dollars.\r\n                    View value statistics,market cap and supply.\r\n                </p>\r\n            </Col>\r\n            <Select\r\n                defaultValue='7d'\r\n                className=\"select-timeperiod\"\r\n                placeholder=\"Select Time Period\"\r\n                onChange={(value) => setTimeperiod(value)}\r\n            >\r\n                {time.map((date) => <Option key={date}>{date}</Option>)}\r\n\r\n            </Select>\r\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n            <Col className=\"stats-container\">\r\n                <Col className=\"coin-value-statistics\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-detailes\">{cryptoDetails.name} Value Statistics</Title>\r\n                        <p>An Overview showing the stats of {cryptoDetails.name}</p>\r\n                    </Col>\r\n                    {stats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"other-stats-info\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-detailes\">Other Statistics</Title>\r\n                        <p>An Overview showing the stats of all Coins</p>\r\n                    </Col>\r\n                    {genericStats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n            <Col className=\"coin-desc-link\">\r\n                <Row className=\"coin-desc\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        What is {cryptoDetails.name}?\r\n                        {HTMLReactParser(cryptoDetails.description)}\r\n                    </Title>\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        {cryptoDetails.name} Links\r\n                    </Title>\r\n                    {cryptoDetails.links.map((link) => (\r\n                        <Row className=\"coin-link\" key={link.name}>\r\n                            <Title level={5} className=\"link-name\">\r\n                                {link.type}\r\n                            </Title>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n                        </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default Cryptodetails\r\n","import React from 'react'\r\nimport { Col, Collapse, Row , Typography ,Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useGetCryptoExchangesQuery } from '../services/cryptoApi'\r\nimport Loader from '../components/Loader'\r\nimport millify from 'millify';\r\n\r\nconst {Text} = Typography;\r\nconst { Panel } = Collapse;\r\nconst Exchanges = () => {\r\n\r\n    const {data , isFetching} = useGetCryptoExchangesQuery();\r\n    const coinExchanges = data?.data?.exchanges;\r\n    console.log(coinExchanges)\r\n    if (isFetching) return <Loader />;\r\n    return (\r\n        <>\r\n            <Row gutter={[32,50]}>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n            {coinExchanges.map((exchanges)=>(\r\n                <Col span={24}>\r\n                <Collapse accordion >\r\n                        <Panel header={(\r\n                            <Row key={exchanges.id}>\r\n                            <Col span={6}>\r\n                              <Text><strong>{exchanges.rank}.</strong></Text>\r\n                              <Avatar className=\"exchange-image\" src={exchanges.iconUrl} />\r\n                              <Text><strong>{exchanges.name}</strong></Text>\r\n                            </Col>\r\n                            <Col span={6}>${millify(exchanges.volume)}</Col>\r\n                            <Col span={6}>{millify(exchanges.numberOfMarkets)}</Col>\r\n                            <Col span={6}>{millify(exchanges.marketShare)}%</Col>\r\n                          </Row>\r\n                        )} key={exchanges.id} showArrow={false}>\r\n                             {HTMLReactParser(exchanges.description || \" \")}\r\n                        </Panel>\r\n                </Collapse>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Exchanges\r\n","import React from 'react'\r\nimport millify from 'millify'\r\nimport { Typography, Row, Col, Statistic } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport { Cryptocurrencies, News } from '../components'\r\nimport Loader from './Loader'\r\nconst { Title } = Typography\r\n\r\n\r\nconst Homepage = () => {\r\n\r\n    const { data, isFetching } = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats\r\n    if (isFetching) return <Loader />\r\n\r\n    return (\r\n        <>\r\n            <Title level={2} className=\"heading\">Global Cypto Stats</Title>\r\n            <Row>\r\n                <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total 24h volume\" value={millify(globalStats.total24hVolume)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n                <Title level={3} className=\"show-more\"><Link to='/cryptocurrencies'>Show More</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies simplified />\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n                <Title level={3} className=\"show-more\"><Link to='/news'>Show More</Link></Title>\r\n            </div>\r\n            <News simplified />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': '0e161ce069msh7e0ebb6daeb6e43p1d7b53jsn67595cc20534'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com'\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders })\r\n\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: (count) => createRequest(`/news/search?q=Cryptocurrency&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\r\n        })\r\n    })\r\n})\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\r\nimport moment from 'moment'\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport Loader from './Loader'\r\nconst demoImage = \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\"\r\nconst { Text, Title } = Typography\r\nconst { Option } = Select\r\n\r\nconst News = ({ simplified }) => {\r\n    const counter = simplified ? 6 : 40\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery(counter)\r\n\r\n    if (!cryptoNews) { return <Loader /> }\r\n    console.log(cryptoNews)\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                                <img style={{ maxWidth: '200px', maxHeight: '100px' }} src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"News\" />\r\n                            </div>\r\n                            <p>\r\n                                {news.description > 100 ? `${news.description.substring(0, 100)}...` : news.description}\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} />\r\n                                <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                            </div>\r\n                            <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react'\r\nimport { Switch, Route, Link } from 'react-router-dom'\r\nimport { Layout, Typography, Space } from 'antd'\r\n\r\nimport { Navbar, Exchanges, Homepage, Cryptocurrencies, News, CryptoDetails } from './components'\r\n\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"navbar\">\r\n                <Navbar />\r\n            </div>\r\n            <div className=\"main\">\r\n                <Layout>\r\n                    <div className=\"routes\">\r\n                        <Switch>\r\n                            <Route exact path=\"/homepage\">\r\n                                <Homepage />\r\n                            </Route>\r\n                            <Route exact path=\"/exchanges\">\r\n                                <Exchanges />\r\n                            </Route>\r\n                            <Route exact path=\"/cryptocurrencies\">\r\n                                <Cryptocurrencies />\r\n                            </Route>\r\n                            <Route exact path=\"/crypto/:coinId\">\r\n                                <CryptoDetails />\r\n                            </Route>\r\n                            <Route exact path=\"/news\">\r\n                                <News />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Layout>\r\n\r\n                <div className=\"footer\">\r\n                    <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>\r\n                        Cryptoverse <br />\r\n                        All rights reserved.\r\n                    </Typography.Title>\r\n                    <Space>\r\n                        <Link to=\"/homepage\">Home</Link>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Space>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { cryptoApi } from '../services/cryptoApi'\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi'\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n})","import react from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport App from './App'\r\nimport 'antd/dist/antd.css'\r\nimport { Provider } from 'react-redux'\r\nimport store from './app/store'\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </Router>,\r\n    document.getElementById('root'))"],"sourceRoot":""}